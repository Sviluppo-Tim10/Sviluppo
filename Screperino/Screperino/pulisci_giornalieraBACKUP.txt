import pandas as pd
import os
from datetime import datetime, date, timedelta
import logging

#nota bene: Se non si è sicuri al 100% NON TOCCARE NIENTE!!! Grazie Yuri 

def setup_logging(log_path):
    """Configura il logging per scrivere su un percorso specifico."""
    os.makedirs(log_path, exist_ok=True)
    log_file = os.path.join(log_path, 'Log_Pulizia.txt')

    logger = logging.getLogger()
    if logger.hasHandlers():
        logger.handlers.clear()

    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(levelname)s - %(message)s',
        filename=log_file,
        filemode='a'
    )
    
    console_handler = logging.StreamHandler()
    console_handler.setLevel(logging.INFO)
    formatter = logging.Formatter('%(levelname)s - %(message)s')
    console_handler.setFormatter(formatter)
    logging.getLogger().addHandler(console_handler)


def pulisci_giornaliere(data_da_processare=None):
    """
    Consolida e pulisce le estrazioni per un giorno specifico.
    Se nessuna data è fornita, usa la data odierna.
    """
    # --- CONFIGURAZIONE DEI PERCORSI ---
    path_input_base = r"C:\Users\security\Documents\Codice\Python\Screperino\File_Output\Estrazioni_Giornaliere"
    path_output_pulite = r"C:\Users\security\Documents\Codice\Python\Screperino\File_Output\Estrazioni_Giornaliere_Pulite"
    path_log = r"C:\Users\security\Documents\Codice\Python\Screperino\Log"

    setup_logging(path_log)
    logging.info("================== AVVIO SCRIPT DI PULIZIA ==================")

    # Se non viene fornita una data, si usa quella di oggi
    if data_da_processare is None:
        data_da_processare = date.today()

    # 1. Determina la cartella di input per la data specificata
    nome_cartella = f"Estrazioni_{data_da_processare.strftime('%d_%m_%Y')}"
    path_input_specifico = os.path.join(path_input_base, nome_cartella)

    if not os.path.isdir(path_input_specifico):
        logging.error(f"ERRORE: La cartella di input per la data {data_da_processare.strftime('%d-%m-%Y')} non è stata trovata: {path_input_specifico}")
        return

    logging.info(f"Trovata cartella di input: {path_input_specifico}")

    lista_file = [os.path.join(path_input_specifico, f) for f in os.listdir(path_input_specifico) if f.endswith('.xlsx')]

    if not lista_file:
        logging.warning(f"AVVISO: Nessun file .xlsx trovato nella cartella per la data {data_da_processare.strftime('%d-%m-%Y')}.")
        return

    df_list = []
    for file in lista_file:
        try:
            df_temp = pd.read_excel(file)
            df_list.append(df_temp)
        except Exception as e:
            logging.error(f"Impossibile leggere il file {file}. Errore: {e}")
            continue
    
    df_totale = pd.concat(df_list, ignore_index=True)
    logging.info(f"Uniti {len(lista_file)} file. Righe totali prima della pulizia: {len(df_totale)}")

    
    righe_prima = len(df_totale)
    df_totale.dropna(how='all', inplace=True)
    logging.info(f"Rimosse {righe_prima - len(df_totale)} righe vuote.")

    righe_prima = len(df_totale)
    df_totale.drop_duplicates(inplace=True)
    logging.info(f"Rimosse {righe_prima - len(df_totale)} righe duplicate.")
    logging.info(f"Numero finale di righe uniche: {len(df_totale)}")

    
    if not df_totale.empty:
        try:
            os.makedirs(path_output_pulite, exist_ok=True)
            
            nome_file_output = f"Giornaliera_Pulita_{data_da_processare.strftime('%d-%m-%Y')}.xlsx"
            percorso_completo_output = os.path.join(path_output_pulite, nome_file_output)
            
            df_totale.to_excel(percorso_completo_output, index=False)
            logging.info(f"✅ Pulizia completata! Dati salvati in: {percorso_completo_output}")

        except Exception as e:
            logging.error(f"ERRORE CRITICO: Impossibile salvare il file pulito. Dettagli: {e}")
    else:
        logging.warning("AVVISO: Nessun dato rimasto dopo la pulizia. Nessun file è stato creato.")


if __name__ == "__main__":
    
    #Ecco alcuni esmpi per aiutare a comprendere e per attivarlo in modi differenti (YURI) ps Se si ha dubbi chiedere prima di toccare
    # ESEMPIO 1: Esecuzione standard (pulisce i dati di OGGI)
    # Lasciare la riga successiva attiva per esecuzione STANDARD quella base
    pulisci_giornaliere()

    # ESEMPIO 2: Esecuzione per un giorno specifico (es. IERI)
    # Per usarlo, togli il commento '#' dalle due righe seguenti e metti in commento la riga sopra.
    # data_di_ieri = date.today() - timedelta(days=1)
    # pulisci_giornaliere(data_di_ieri)
    
    # ESEMPIO 3: Esecuzione per una data a tua scelta
    # data_scelta = date(2025, 7, 1) # Anno, Mese, Giorno
    # pulisci_giornaliere(data_scelta)

    logging.info("================== FINE SCRIPT DI PULIZIA ===================\n")